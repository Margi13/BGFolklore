@using BGFolklore.Models.Calendar.ViewModels
@using BGFolklore.Common.Nomenclatures
@using BGFolklore.Web.Controllers
@using BGFolklore.Web.Common;
@using System.Linq
@using Microsoft.Extensions.Localization;
@using BGFolklore.Data.Models;
@using Microsoft.AspNetCore.Identity;

@inject UserManager<User> userManager

@inject IStringLocalizer<CalendarController> localizer

@model UpcomingEventViewModel
<tr class="eventRow" onclick="eventRowOnClick(@Json.Serialize(Model).ToString(), @Json.Serialize(userManager.GetUserId(User)).ToString())">
    <td>@Towns.AllTowns.OrderBy(t => t.Id).ToArray()[Model.TownId - 1].Name</td>
    <td>@localizer[$"PlaceType{Model.PlaceType}"]</td>
    <td>@Model.Name</td>
    <td>@Model.Address</td>
    <td>@Model.EventDateTime.Date.ToShortDateString()</td>
    <td>@Model.EventDateTime.TimeOfDay</td>
    <td>
        @* В мапер *@
        @foreach (int item in Enum.GetValues(typeof(AttendeeType)))
        {
            @if ((Model.IntendedFor & item) == item)
            {
                <div>
                    @localizer[$"AttendeeType{(((AttendeeType)item).ToString())}"]
                </div>
            }
        }
    </td>
    @*<td>Няма</td>*@
</tr>